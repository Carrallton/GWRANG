import psutil
import time
import os
from datetime import datetime
from pathlib import Path

class NetGuardFZ152:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –§–ó-152"""
        # –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ
        self.local_storage = True
        self.internet_transmission = False
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        self.show_consent()
    
    def show_consent(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏"""
        self.clear_screen()
        print("=" * 60)
        print("GWRANG - –ú–æ–Ω–∏—Ç–æ—Ä —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        print("=" * 60)
        print("üõ° –°–û–ë–õ–Æ–î–ï–ù–ò–ï –§–ó-152:")
        print("‚Ä¢ –ù–ï —Å–æ–±–∏—Ä–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("‚Ä¢ –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç")
        print("‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ")
        print("‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        print("=" * 60)
        print()
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    
    def clear_screen(self):
        """–û—á–∏—Å—Ç–∏—Ç—å —ç–∫—Ä–∞–Ω"""
        os.system('cls' if os.name == 'nt' else 'clear')
    
    def format_bytes(self, bytes_value):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∞–π—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
        for unit in ['B', 'KB', 'MB', 'GB']:
            if bytes_value < 1024.0:
                return f"{bytes_value:.1f} {unit}"
            bytes_value /= 1024.0
        return f"{bytes_value:.1f} TB"
    
    def show_network_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–∑–æ–≤—É—é —Å–µ—Ç–µ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        stats = psutil.net_io_counters()
        print("üìä –°–µ—Ç–µ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {self.format_bytes(stats.bytes_sent)}")
        print(f"   üì• –ü–æ–ª—É—á–µ–Ω–æ: {self.format_bytes(stats.bytes_recv)}")
        print(f"   üì¶ –ü–∞–∫–µ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats.packets_sent}")
        print(f"   üì¶ –ü–∞–∫–µ—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: {stats.packets_recv}")
        print()
    
    def show_active_connections(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
        print("üîå –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:")
        try:
            connections = psutil.net_connections(kind='inet')
            if not connections:
                print("   –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π")
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
            for i, conn in enumerate(connections[:10]):
                if conn.pid is not None:
                    try:
                        process = psutil.Process(conn.pid)
                        process_name = process.name()
                    except (psutil.NoSuchProcess, psutil.AccessDenied):
                        process_name = "Unknown"
                    
                    local_addr = f"{conn.laddr.ip}:{conn.laddr.port}" if conn.laddr else "N/A"
                    remote_addr = f"{conn.raddr.ip}:{conn.raddr.port}" if conn.raddr else "N/A"
                    
                    print(f"   {i+1:2d}. {process_name[:15]:<15} {local_addr} ‚Üí {remote_addr}")
                
            if len(connections) > 10:
                print(f"   ... –∏ –µ—â–µ {len(connections) - 10} —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π")
                
        except Exception as e:
            print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: {e}")
        print()
    
    def run_basic_monitor(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
        self.clear_screen()
        print("GWRANG - –ë–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        print("=" * 40)
        print("üîí –î–∞–Ω–Ω—ã–µ –ù–ï –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç")
        print()
        
        self.show_network_stats()
        self.show_active_connections()
        print("üîÑ –û–±–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –¥–ª—è –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print()
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
    
    def run_realtime_monitor(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
        self.clear_screen()
        print("GWRANG - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        print("=" * 50)
        print("üîí –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –§–ó-152 - –¥–∞–Ω–Ω—ã–µ –ù–ï –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è")
        print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print()
        
        try:
            old_stats = psutil.net_io_counters()
            while True:
                time.sleep(1)
                new_stats = psutil.net_io_counters()
                
                # –°—á–∏—Ç–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
                bytes_sent_per_sec = new_stats.bytes_sent - old_stats.bytes_sent
                bytes_recv_per_sec = new_stats.bytes_recv - old_stats.bytes_recv
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω
                self.clear_screen()
                print("GWRANG - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
                print("=" * 50)
                print("üîí –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –§–ó-152")
                print()
                print("üìä –°–∫–æ—Ä–æ—Å—Ç—å —Å–µ—Ç–∏:")
                print(f"   üì§ –ò—Å—Ö–æ–¥—è—â–∞—è: {self.format_bytes(bytes_sent_per_sec)}/—Å")
                print(f"   üì• –í—Ö–æ–¥—è—â–∞—è: {self.format_bytes(bytes_recv_per_sec)}/—Å")
                print()
                print("üîÑ –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É...")
                print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
                
                old_stats = new_stats
                
        except KeyboardInterrupt:
            print("\n\nüëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
    
    def show_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        self.clear_screen()
        print("GWRANG - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("=" * 40)
        print("üîí –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –§–ó-152")
        print()
        print("1. –ë–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        print("2. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
        print("0. –í—ã—Ö–æ–¥")
        print()
    
    def show_privacy_policy(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏"""
        self.clear_screen()
        print("–ü–û–õ–ò–¢–ò–ö–ê –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–û–°–¢–ò GWRANG")
        print("=" * 50)
        print()
        print("1. –°–û–ë–õ–Æ–î–ï–ù–ò–ï –§–ó-152")
        print("   - –ü—Ä–æ–¥—É–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–º—É –∑–∞–∫–æ–Ω—É ‚Ññ152-–§–ó")
        print("   - –ù–µ —Å–æ–±–∏—Ä–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("   - –ù–µ –ø–µ—Ä–µ–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è")
        print("   - –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ")
        print()
        print("2. –°–û–ë–ò–†–ê–ï–ú–´–ï –î–ê–ù–ù–´–ï")
        print("   - –¢–æ–ª—å–∫–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–µ–≤—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è—Ö")
        print("   - –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ")
        print("   - –ù–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print()
        print("3. –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–•")
        print("   - –ê–Ω–∞–ª–∏–∑ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ü–µ–ª–µ–π —Å–µ—Ç–µ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        print("   - –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º")
        print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç")
        print()
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
    
    def run(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        while True:
            self.show_menu()
            try:
                choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-3): ").strip()
                
                if choice == "1":
                    self.run_basic_monitor()
                elif choice == "2":
                    self.run_realtime_monitor()
                elif choice == "3":
                    self.show_privacy_policy()
                elif choice == "0":
                    print("üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GWRANG!")
                    break
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    time.sleep(2)
                    
            except KeyboardInterrupt:
                print("\n\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                time.sleep(2)

if __name__ == "__main__":
    app = NetGuardFZ152()
    app.run()